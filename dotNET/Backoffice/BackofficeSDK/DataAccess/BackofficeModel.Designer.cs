//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("BackofficeModel", "modulepermission_module", "bo_module", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Southapps.Framework.Backoffice.SDK.DataAccess.Module), "bo_module_permission", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Southapps.Framework.Backoffice.SDK.DataAccess.Module_Permission), true)]
[assembly: EdmRelationshipAttribute("BackofficeModel", "modulepermission_permission", "bo_permission", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Southapps.Framework.Backoffice.SDK.DataAccess.Permission), "bo_module_permission", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Southapps.Framework.Backoffice.SDK.DataAccess.Module_Permission), true)]
[assembly: EdmRelationshipAttribute("BackofficeModel", "rolepermission_modulepermission", "bo_module_permission", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Southapps.Framework.Backoffice.SDK.DataAccess.Module_Permission), "bo_role_permission", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Southapps.Framework.Backoffice.SDK.DataAccess.RolePermission), true)]
[assembly: EdmRelationshipAttribute("BackofficeModel", "userpermission_modulepermission", "bo_module_permission", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Southapps.Framework.Backoffice.SDK.DataAccess.Module_Permission), "bo_user_permission", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Southapps.Framework.Backoffice.SDK.DataAccess.UserPermission), true)]
[assembly: EdmRelationshipAttribute("BackofficeModel", "rolepermission_role", "bo_role", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Southapps.Framework.Backoffice.SDK.DataAccess.Role), "bo_role_permission", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Southapps.Framework.Backoffice.SDK.DataAccess.RolePermission), true)]
[assembly: EdmRelationshipAttribute("BackofficeModel", "user_role", "bo_role", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Southapps.Framework.Backoffice.SDK.DataAccess.Role), "bo_user", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Southapps.Framework.Backoffice.SDK.DataAccess.User), true)]
[assembly: EdmRelationshipAttribute("BackofficeModel", "userpermission_user", "bo_user", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Southapps.Framework.Backoffice.SDK.DataAccess.User), "bo_user_permission", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Southapps.Framework.Backoffice.SDK.DataAccess.UserPermission), true)]

#endregion

namespace Southapps.Framework.Backoffice.SDK.DataAccess
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class BackofficeEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new BackofficeEntities object using the connection string found in the 'BackofficeEntities' section of the application configuration file.
        /// </summary>
        public BackofficeEntities() : base("name=BackofficeEntities", "BackofficeEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new BackofficeEntities object.
        /// </summary>
        public BackofficeEntities(string connectionString) : base(connectionString, "BackofficeEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new BackofficeEntities object.
        /// </summary>
        public BackofficeEntities(EntityConnection connection) : base(connection, "BackofficeEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Module> Modules
        {
            get
            {
                if ((_Modules == null))
                {
                    _Modules = base.CreateObjectSet<Module>("Modules");
                }
                return _Modules;
            }
        }
        private ObjectSet<Module> _Modules;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Module_Permission> Module_Permission
        {
            get
            {
                if ((_Module_Permission == null))
                {
                    _Module_Permission = base.CreateObjectSet<Module_Permission>("Module_Permission");
                }
                return _Module_Permission;
            }
        }
        private ObjectSet<Module_Permission> _Module_Permission;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Permission> Permissions
        {
            get
            {
                if ((_Permissions == null))
                {
                    _Permissions = base.CreateObjectSet<Permission>("Permissions");
                }
                return _Permissions;
            }
        }
        private ObjectSet<Permission> _Permissions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Role> Roles
        {
            get
            {
                if ((_Roles == null))
                {
                    _Roles = base.CreateObjectSet<Role>("Roles");
                }
                return _Roles;
            }
        }
        private ObjectSet<Role> _Roles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RolePermission> RolePermissions
        {
            get
            {
                if ((_RolePermissions == null))
                {
                    _RolePermissions = base.CreateObjectSet<RolePermission>("RolePermissions");
                }
                return _RolePermissions;
            }
        }
        private ObjectSet<RolePermission> _RolePermissions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserPermission> UserPermissions
        {
            get
            {
                if ((_UserPermissions == null))
                {
                    _UserPermissions = base.CreateObjectSet<UserPermission>("UserPermissions");
                }
                return _UserPermissions;
            }
        }
        private ObjectSet<UserPermission> _UserPermissions;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Modules EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToModules(Module module)
        {
            base.AddObject("Modules", module);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Module_Permission EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToModule_Permission(Module_Permission module_Permission)
        {
            base.AddObject("Module_Permission", module_Permission);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Permissions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPermissions(Permission permission)
        {
            base.AddObject("Permissions", permission);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Roles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRoles(Role role)
        {
            base.AddObject("Roles", role);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RolePermissions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRolePermissions(RolePermission rolePermission)
        {
            base.AddObject("RolePermissions", rolePermission);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserPermissions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserPermissions(UserPermission userPermission)
        {
            base.AddObject("UserPermissions", userPermission);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BackofficeModel", Name="Module")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Module : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Module object.
        /// </summary>
        /// <param name="moduleId">Initial value of the moduleId property.</param>
        /// <param name="name">Initial value of the name property.</param>
        public static Module CreateModule(global::System.Int32 moduleId, global::System.String name)
        {
            Module module = new Module();
            module.moduleId = moduleId;
            module.name = name;
            return module;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 moduleId
        {
            get
            {
                return _moduleId;
            }
            set
            {
                if (_moduleId != value)
                {
                    OnmoduleIdChanging(value);
                    ReportPropertyChanging("moduleId");
                    _moduleId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("moduleId");
                    OnmoduleIdChanged();
                }
            }
        }
        private global::System.Int32 _moduleId;
        partial void OnmoduleIdChanging(global::System.Int32 value);
        partial void OnmoduleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BackofficeModel", "modulepermission_module", "bo_module_permission")]
        public EntityCollection<Module_Permission> bo_module_permission
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Module_Permission>("BackofficeModel.modulepermission_module", "bo_module_permission");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Module_Permission>("BackofficeModel.modulepermission_module", "bo_module_permission", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BackofficeModel", Name="Module_Permission")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Module_Permission : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Module_Permission object.
        /// </summary>
        /// <param name="modulePermissionId">Initial value of the modulePermissionId property.</param>
        /// <param name="permissionId">Initial value of the permissionId property.</param>
        /// <param name="moduleId">Initial value of the moduleId property.</param>
        public static Module_Permission CreateModule_Permission(global::System.Int32 modulePermissionId, global::System.Int32 permissionId, global::System.Int32 moduleId)
        {
            Module_Permission module_Permission = new Module_Permission();
            module_Permission.modulePermissionId = modulePermissionId;
            module_Permission.permissionId = permissionId;
            module_Permission.moduleId = moduleId;
            return module_Permission;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 modulePermissionId
        {
            get
            {
                return _modulePermissionId;
            }
            set
            {
                if (_modulePermissionId != value)
                {
                    OnmodulePermissionIdChanging(value);
                    ReportPropertyChanging("modulePermissionId");
                    _modulePermissionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("modulePermissionId");
                    OnmodulePermissionIdChanged();
                }
            }
        }
        private global::System.Int32 _modulePermissionId;
        partial void OnmodulePermissionIdChanging(global::System.Int32 value);
        partial void OnmodulePermissionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 permissionId
        {
            get
            {
                return _permissionId;
            }
            set
            {
                OnpermissionIdChanging(value);
                ReportPropertyChanging("permissionId");
                _permissionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("permissionId");
                OnpermissionIdChanged();
            }
        }
        private global::System.Int32 _permissionId;
        partial void OnpermissionIdChanging(global::System.Int32 value);
        partial void OnpermissionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 moduleId
        {
            get
            {
                return _moduleId;
            }
            set
            {
                OnmoduleIdChanging(value);
                ReportPropertyChanging("moduleId");
                _moduleId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("moduleId");
                OnmoduleIdChanged();
            }
        }
        private global::System.Int32 _moduleId;
        partial void OnmoduleIdChanging(global::System.Int32 value);
        partial void OnmoduleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String url
        {
            get
            {
                return _url;
            }
            set
            {
                OnurlChanging(value);
                ReportPropertyChanging("url");
                _url = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("url");
                OnurlChanged();
            }
        }
        private global::System.String _url;
        partial void OnurlChanging(global::System.String value);
        partial void OnurlChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BackofficeModel", "modulepermission_module", "bo_module")]
        public Module bo_module
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Module>("BackofficeModel.modulepermission_module", "bo_module").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Module>("BackofficeModel.modulepermission_module", "bo_module").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Module> bo_moduleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Module>("BackofficeModel.modulepermission_module", "bo_module");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Module>("BackofficeModel.modulepermission_module", "bo_module", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BackofficeModel", "modulepermission_permission", "bo_permission")]
        public Permission bo_permission
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Permission>("BackofficeModel.modulepermission_permission", "bo_permission").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Permission>("BackofficeModel.modulepermission_permission", "bo_permission").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Permission> bo_permissionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Permission>("BackofficeModel.modulepermission_permission", "bo_permission");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Permission>("BackofficeModel.modulepermission_permission", "bo_permission", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BackofficeModel", "rolepermission_modulepermission", "bo_role_permission")]
        public EntityCollection<RolePermission> bo_role_permission
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RolePermission>("BackofficeModel.rolepermission_modulepermission", "bo_role_permission");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RolePermission>("BackofficeModel.rolepermission_modulepermission", "bo_role_permission", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BackofficeModel", "userpermission_modulepermission", "bo_user_permission")]
        public EntityCollection<UserPermission> bo_user_permission
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserPermission>("BackofficeModel.userpermission_modulepermission", "bo_user_permission");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserPermission>("BackofficeModel.userpermission_modulepermission", "bo_user_permission", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BackofficeModel", Name="Permission")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Permission : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Permission object.
        /// </summary>
        /// <param name="permissionId">Initial value of the permissionId property.</param>
        /// <param name="name">Initial value of the name property.</param>
        public static Permission CreatePermission(global::System.Int32 permissionId, global::System.String name)
        {
            Permission permission = new Permission();
            permission.permissionId = permissionId;
            permission.name = name;
            return permission;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 permissionId
        {
            get
            {
                return _permissionId;
            }
            set
            {
                if (_permissionId != value)
                {
                    OnpermissionIdChanging(value);
                    ReportPropertyChanging("permissionId");
                    _permissionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("permissionId");
                    OnpermissionIdChanged();
                }
            }
        }
        private global::System.Int32 _permissionId;
        partial void OnpermissionIdChanging(global::System.Int32 value);
        partial void OnpermissionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BackofficeModel", "modulepermission_permission", "bo_module_permission")]
        public EntityCollection<Module_Permission> bo_module_permission
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Module_Permission>("BackofficeModel.modulepermission_permission", "bo_module_permission");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Module_Permission>("BackofficeModel.modulepermission_permission", "bo_module_permission", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BackofficeModel", Name="Role")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Role : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Role object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="name">Initial value of the name property.</param>
        public static Role CreateRole(global::System.Int32 id, global::System.String name)
        {
            Role role = new Role();
            role.id = id;
            role.name = name;
            return role;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BackofficeModel", "rolepermission_role", "bo_role_permission")]
        public EntityCollection<RolePermission> bo_role_permission
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RolePermission>("BackofficeModel.rolepermission_role", "bo_role_permission");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RolePermission>("BackofficeModel.rolepermission_role", "bo_role_permission", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BackofficeModel", "user_role", "bo_user")]
        public EntityCollection<User> bo_user
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("BackofficeModel.user_role", "bo_user");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("BackofficeModel.user_role", "bo_user", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BackofficeModel", Name="RolePermission")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RolePermission : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RolePermission object.
        /// </summary>
        /// <param name="rolePermissionId">Initial value of the rolePermissionId property.</param>
        /// <param name="modulePermissionId">Initial value of the modulePermissionId property.</param>
        /// <param name="roleId">Initial value of the roleId property.</param>
        public static RolePermission CreateRolePermission(global::System.Int32 rolePermissionId, global::System.Int32 modulePermissionId, global::System.Int32 roleId)
        {
            RolePermission rolePermission = new RolePermission();
            rolePermission.rolePermissionId = rolePermissionId;
            rolePermission.modulePermissionId = modulePermissionId;
            rolePermission.roleId = roleId;
            return rolePermission;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 rolePermissionId
        {
            get
            {
                return _rolePermissionId;
            }
            set
            {
                if (_rolePermissionId != value)
                {
                    OnrolePermissionIdChanging(value);
                    ReportPropertyChanging("rolePermissionId");
                    _rolePermissionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("rolePermissionId");
                    OnrolePermissionIdChanged();
                }
            }
        }
        private global::System.Int32 _rolePermissionId;
        partial void OnrolePermissionIdChanging(global::System.Int32 value);
        partial void OnrolePermissionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 modulePermissionId
        {
            get
            {
                return _modulePermissionId;
            }
            set
            {
                OnmodulePermissionIdChanging(value);
                ReportPropertyChanging("modulePermissionId");
                _modulePermissionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("modulePermissionId");
                OnmodulePermissionIdChanged();
            }
        }
        private global::System.Int32 _modulePermissionId;
        partial void OnmodulePermissionIdChanging(global::System.Int32 value);
        partial void OnmodulePermissionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 roleId
        {
            get
            {
                return _roleId;
            }
            set
            {
                OnroleIdChanging(value);
                ReportPropertyChanging("roleId");
                _roleId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("roleId");
                OnroleIdChanged();
            }
        }
        private global::System.Int32 _roleId;
        partial void OnroleIdChanging(global::System.Int32 value);
        partial void OnroleIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BackofficeModel", "rolepermission_modulepermission", "bo_module_permission")]
        public Module_Permission bo_module_permission
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Module_Permission>("BackofficeModel.rolepermission_modulepermission", "bo_module_permission").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Module_Permission>("BackofficeModel.rolepermission_modulepermission", "bo_module_permission").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Module_Permission> bo_module_permissionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Module_Permission>("BackofficeModel.rolepermission_modulepermission", "bo_module_permission");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Module_Permission>("BackofficeModel.rolepermission_modulepermission", "bo_module_permission", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BackofficeModel", "rolepermission_role", "bo_role")]
        public Role bo_role
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("BackofficeModel.rolepermission_role", "bo_role").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("BackofficeModel.rolepermission_role", "bo_role").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Role> bo_roleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("BackofficeModel.rolepermission_role", "bo_role");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Role>("BackofficeModel.rolepermission_role", "bo_role", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BackofficeModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="userId">Initial value of the userId property.</param>
        /// <param name="password">Initial value of the password property.</param>
        /// <param name="roleId">Initial value of the roleId property.</param>
        /// <param name="admin">Initial value of the admin property.</param>
        /// <param name="active">Initial value of the active property.</param>
        public static User CreateUser(global::System.Int32 userId, global::System.String password, global::System.Int32 roleId, global::System.Boolean admin, global::System.Boolean active)
        {
            User user = new User();
            user.userId = userId;
            user.password = password;
            user.roleId = roleId;
            user.admin = admin;
            user.active = active;
            return user;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 userId
        {
            get
            {
                return _userId;
            }
            set
            {
                if (_userId != value)
                {
                    OnuserIdChanging(value);
                    ReportPropertyChanging("userId");
                    _userId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("userId");
                    OnuserIdChanged();
                }
            }
        }
        private global::System.Int32 _userId;
        partial void OnuserIdChanging(global::System.Int32 value);
        partial void OnuserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String username
        {
            get
            {
                return _username;
            }
            set
            {
                OnusernameChanging(value);
                ReportPropertyChanging("username");
                _username = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("username");
                OnusernameChanged();
            }
        }
        private global::System.String _username;
        partial void OnusernameChanging(global::System.String value);
        partial void OnusernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String email
        {
            get
            {
                return _email;
            }
            set
            {
                OnemailChanging(value);
                ReportPropertyChanging("email");
                _email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("email");
                OnemailChanged();
            }
        }
        private global::System.String _email;
        partial void OnemailChanging(global::System.String value);
        partial void OnemailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String comment
        {
            get
            {
                return _comment;
            }
            set
            {
                OncommentChanging(value);
                ReportPropertyChanging("comment");
                _comment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("comment");
                OncommentChanged();
            }
        }
        private global::System.String _comment;
        partial void OncommentChanging(global::System.String value);
        partial void OncommentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String password
        {
            get
            {
                return _password;
            }
            set
            {
                OnpasswordChanging(value);
                ReportPropertyChanging("password");
                _password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("password");
                OnpasswordChanged();
            }
        }
        private global::System.String _password;
        partial void OnpasswordChanging(global::System.String value);
        partial void OnpasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> lastActivityDate
        {
            get
            {
                return _lastActivityDate;
            }
            set
            {
                OnlastActivityDateChanging(value);
                ReportPropertyChanging("lastActivityDate");
                _lastActivityDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("lastActivityDate");
                OnlastActivityDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _lastActivityDate;
        partial void OnlastActivityDateChanging(Nullable<global::System.DateTime> value);
        partial void OnlastActivityDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> lastLoginDate
        {
            get
            {
                return _lastLoginDate;
            }
            set
            {
                OnlastLoginDateChanging(value);
                ReportPropertyChanging("lastLoginDate");
                _lastLoginDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("lastLoginDate");
                OnlastLoginDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _lastLoginDate;
        partial void OnlastLoginDateChanging(Nullable<global::System.DateTime> value);
        partial void OnlastLoginDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> lastPasswordChangedDate
        {
            get
            {
                return _lastPasswordChangedDate;
            }
            set
            {
                OnlastPasswordChangedDateChanging(value);
                ReportPropertyChanging("lastPasswordChangedDate");
                _lastPasswordChangedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("lastPasswordChangedDate");
                OnlastPasswordChangedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _lastPasswordChangedDate;
        partial void OnlastPasswordChangedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnlastPasswordChangedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> creationDate
        {
            get
            {
                return _creationDate;
            }
            set
            {
                OncreationDateChanging(value);
                ReportPropertyChanging("creationDate");
                _creationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("creationDate");
                OncreationDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _creationDate;
        partial void OncreationDateChanging(Nullable<global::System.DateTime> value);
        partial void OncreationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> isLockedOut
        {
            get
            {
                return _isLockedOut;
            }
            set
            {
                OnisLockedOutChanging(value);
                ReportPropertyChanging("isLockedOut");
                _isLockedOut = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("isLockedOut");
                OnisLockedOutChanged();
            }
        }
        private Nullable<global::System.Boolean> _isLockedOut;
        partial void OnisLockedOutChanging(Nullable<global::System.Boolean> value);
        partial void OnisLockedOutChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> lastLockedOutDate
        {
            get
            {
                return _lastLockedOutDate;
            }
            set
            {
                OnlastLockedOutDateChanging(value);
                ReportPropertyChanging("lastLockedOutDate");
                _lastLockedOutDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("lastLockedOutDate");
                OnlastLockedOutDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _lastLockedOutDate;
        partial void OnlastLockedOutDateChanging(Nullable<global::System.DateTime> value);
        partial void OnlastLockedOutDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> failedPasswordAttemptCount
        {
            get
            {
                return _failedPasswordAttemptCount;
            }
            set
            {
                OnfailedPasswordAttemptCountChanging(value);
                ReportPropertyChanging("failedPasswordAttemptCount");
                _failedPasswordAttemptCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("failedPasswordAttemptCount");
                OnfailedPasswordAttemptCountChanged();
            }
        }
        private Nullable<global::System.Int64> _failedPasswordAttemptCount;
        partial void OnfailedPasswordAttemptCountChanging(Nullable<global::System.Int64> value);
        partial void OnfailedPasswordAttemptCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> failedPasswordAttemptWindowStart
        {
            get
            {
                return _failedPasswordAttemptWindowStart;
            }
            set
            {
                OnfailedPasswordAttemptWindowStartChanging(value);
                ReportPropertyChanging("failedPasswordAttemptWindowStart");
                _failedPasswordAttemptWindowStart = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("failedPasswordAttemptWindowStart");
                OnfailedPasswordAttemptWindowStartChanged();
            }
        }
        private Nullable<global::System.DateTime> _failedPasswordAttemptWindowStart;
        partial void OnfailedPasswordAttemptWindowStartChanging(Nullable<global::System.DateTime> value);
        partial void OnfailedPasswordAttemptWindowStartChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> failedPasswordAnswerAttemptCount
        {
            get
            {
                return _failedPasswordAnswerAttemptCount;
            }
            set
            {
                OnfailedPasswordAnswerAttemptCountChanging(value);
                ReportPropertyChanging("failedPasswordAnswerAttemptCount");
                _failedPasswordAnswerAttemptCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("failedPasswordAnswerAttemptCount");
                OnfailedPasswordAnswerAttemptCountChanged();
            }
        }
        private Nullable<global::System.Int64> _failedPasswordAnswerAttemptCount;
        partial void OnfailedPasswordAnswerAttemptCountChanging(Nullable<global::System.Int64> value);
        partial void OnfailedPasswordAnswerAttemptCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> failedPasswordAnswerAttemptWindowStart
        {
            get
            {
                return _failedPasswordAnswerAttemptWindowStart;
            }
            set
            {
                OnfailedPasswordAnswerAttemptWindowStartChanging(value);
                ReportPropertyChanging("failedPasswordAnswerAttemptWindowStart");
                _failedPasswordAnswerAttemptWindowStart = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("failedPasswordAnswerAttemptWindowStart");
                OnfailedPasswordAnswerAttemptWindowStartChanged();
            }
        }
        private Nullable<global::System.DateTime> _failedPasswordAnswerAttemptWindowStart;
        partial void OnfailedPasswordAnswerAttemptWindowStartChanging(Nullable<global::System.DateTime> value);
        partial void OnfailedPasswordAnswerAttemptWindowStartChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> entityId
        {
            get
            {
                return _entityId;
            }
            set
            {
                OnentityIdChanging(value);
                ReportPropertyChanging("entityId");
                _entityId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("entityId");
                OnentityIdChanged();
            }
        }
        private Nullable<global::System.Int32> _entityId;
        partial void OnentityIdChanging(Nullable<global::System.Int32> value);
        partial void OnentityIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 roleId
        {
            get
            {
                return _roleId;
            }
            set
            {
                OnroleIdChanging(value);
                ReportPropertyChanging("roleId");
                _roleId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("roleId");
                OnroleIdChanged();
            }
        }
        private global::System.Int32 _roleId;
        partial void OnroleIdChanging(global::System.Int32 value);
        partial void OnroleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean admin
        {
            get
            {
                return _admin;
            }
            set
            {
                OnadminChanging(value);
                ReportPropertyChanging("admin");
                _admin = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("admin");
                OnadminChanged();
            }
        }
        private global::System.Boolean _admin;
        partial void OnadminChanging(global::System.Boolean value);
        partial void OnadminChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean active
        {
            get
            {
                return _active;
            }
            set
            {
                OnactiveChanging(value);
                ReportPropertyChanging("active");
                _active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("active");
                OnactiveChanged();
            }
        }
        private global::System.Boolean _active;
        partial void OnactiveChanging(global::System.Boolean value);
        partial void OnactiveChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BackofficeModel", "user_role", "bo_role")]
        public Role bo_role
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("BackofficeModel.user_role", "bo_role").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("BackofficeModel.user_role", "bo_role").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Role> bo_roleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("BackofficeModel.user_role", "bo_role");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Role>("BackofficeModel.user_role", "bo_role", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BackofficeModel", "userpermission_user", "bo_user_permission")]
        public EntityCollection<UserPermission> bo_user_permission
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserPermission>("BackofficeModel.userpermission_user", "bo_user_permission");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserPermission>("BackofficeModel.userpermission_user", "bo_user_permission", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BackofficeModel", Name="UserPermission")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserPermission : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserPermission object.
        /// </summary>
        /// <param name="userPermissionId">Initial value of the userPermissionId property.</param>
        /// <param name="modulePermissionId">Initial value of the modulePermissionId property.</param>
        /// <param name="userId">Initial value of the userId property.</param>
        public static UserPermission CreateUserPermission(global::System.Int32 userPermissionId, global::System.Int32 modulePermissionId, global::System.Int32 userId)
        {
            UserPermission userPermission = new UserPermission();
            userPermission.userPermissionId = userPermissionId;
            userPermission.modulePermissionId = modulePermissionId;
            userPermission.userId = userId;
            return userPermission;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 userPermissionId
        {
            get
            {
                return _userPermissionId;
            }
            set
            {
                if (_userPermissionId != value)
                {
                    OnuserPermissionIdChanging(value);
                    ReportPropertyChanging("userPermissionId");
                    _userPermissionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("userPermissionId");
                    OnuserPermissionIdChanged();
                }
            }
        }
        private global::System.Int32 _userPermissionId;
        partial void OnuserPermissionIdChanging(global::System.Int32 value);
        partial void OnuserPermissionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 modulePermissionId
        {
            get
            {
                return _modulePermissionId;
            }
            set
            {
                OnmodulePermissionIdChanging(value);
                ReportPropertyChanging("modulePermissionId");
                _modulePermissionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("modulePermissionId");
                OnmodulePermissionIdChanged();
            }
        }
        private global::System.Int32 _modulePermissionId;
        partial void OnmodulePermissionIdChanging(global::System.Int32 value);
        partial void OnmodulePermissionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 userId
        {
            get
            {
                return _userId;
            }
            set
            {
                OnuserIdChanging(value);
                ReportPropertyChanging("userId");
                _userId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("userId");
                OnuserIdChanged();
            }
        }
        private global::System.Int32 _userId;
        partial void OnuserIdChanging(global::System.Int32 value);
        partial void OnuserIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BackofficeModel", "userpermission_modulepermission", "bo_module_permission")]
        public Module_Permission bo_module_permission
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Module_Permission>("BackofficeModel.userpermission_modulepermission", "bo_module_permission").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Module_Permission>("BackofficeModel.userpermission_modulepermission", "bo_module_permission").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Module_Permission> bo_module_permissionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Module_Permission>("BackofficeModel.userpermission_modulepermission", "bo_module_permission");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Module_Permission>("BackofficeModel.userpermission_modulepermission", "bo_module_permission", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BackofficeModel", "userpermission_user", "bo_user")]
        public User bo_user
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BackofficeModel.userpermission_user", "bo_user").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BackofficeModel.userpermission_user", "bo_user").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> bo_userReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BackofficeModel.userpermission_user", "bo_user");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("BackofficeModel.userpermission_user", "bo_user", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
